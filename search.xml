<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo + Butterfly 搭建个人博客随记</title>
      <link href="blog/done/"/>
      <url>blog/done/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Hexo-Butterfly-搭建个人博客随记"><a href="#Hexo-Butterfly-搭建个人博客随记" class="headerlink" title="Hexo + Butterfly 搭建个人博客随记"></a>Hexo + Butterfly 搭建个人博客随记</h1><hr><h2 id="本地部署"><a href="#本地部署" class="headerlink" title="本地部署"></a>本地部署</h2><div class="note warning modern"><p>首先得有一个GitHub账号</p></div><p><img src="\blog\done\SigninGithub.png" alt="Sign in GitHub" width="70%"> </p><div class="note info modern"><p>这里就不赘述如何注册一个GitHub账号了，如果大家能够科学上网想必能轻松完成。</p></div><p>打开你的repo，new一个名字叫<code>YourName.github.io</code>的repo。这里我演示的名字叫<code>BlogDemo</code>，大家也可以挑自己喜欢的。</p><p><img src="\blog\done\YourRepo.png" alt="Your Repo" style="zoom:80%;" /></p><p><img src="\blog\done\NewRepo.png" alt="New Repo" style="zoom:80%;" /></p><div class="note warning modern"><p>注意这里可以下载安装<code>GitHub Desktop</code>，便于不想学<code>git</code>指令的小伙伴管理仓库。此外，需要将<code>HTTPS</code>和<code>SSH</code>对应的网址<code>https://github.com/Loli-Eternally/BlogDemo.github.io.git</code>和地址<code>git@github.com:Loli-Eternally/BlogDemo.github.io.git</code>记录下来，便于后面修改配置进行博客的部署。</p></div><p><img src="\blog\done\BlogDemo.png" alt="Blog Demo"></p><p>下载安装好<code>GitHub Desktop</code>并启动后，clone<code>BlogDemo</code>，URL地址为上面提到的<code>https://github.com/Loli-Eternally/BlogDemo.github.io.git</code></p><p><img src="\blog\done\GD.png" alt="GitHub Desktop"></p><p><img src="\blog\done\GitClone.png" alt="Git Clone"></p><p>这个时候我们的repo是空的，需要在本地将<code>BlogDemo</code>进行部署。可以直接将我准备好的<a href="https://pan.baidu.com/s/18bdxJlWn1yhRBNv-Q51Rsg">Demo镜像</a>下载下来，解压到上面Git Clone图里的<code>Local path</code>下</p><p><img src="\blog\done\Unzip.png" alt="Unzip" style="zoom:80%;" /></p><p>现在需要安装<strong>hexo</strong>了，但是这个框架需要用到Nodejs，这个请大家自行安装。</p><div class="note warning modern"><p>大家安装Nodejs时注意添加环境变量，后面安装<strong>hexo</strong>需要调用<code>npm</code>。</p></div><p>打开Unzip图中最下方的<code>运行脚本.bat</code>，选择1用npm安装hexo（如果太慢可以尝试别的选项）。</p><p><img src="\blog\done\npminstall.png" alt="npm install"></p><p>这里我们可以看到多了个<code>node_modules</code>文件夹，点进去进入<code>.bin</code>目录，<code>ctrl+c</code>复制这个路径。</p><p><img src="\blog\done\NodeModule.png" alt="NodeModule"></p><p><img src="\blog\done\path.png" alt="Path"></p><div class="note info modern"><p>添加环境变量，在这个路径下可以直接从<code>cmd</code>启动<strong>hexo</strong>。</p></div><p><img src="\blog\done\Env.png" alt="Env Config"></p><p>再次打开<code>运行脚本.bat</code>，选择<code>2. 本地运行测试</code>（需要等一小会儿）</p><p><img src="\blog\done\LocalTest.png" alt="Local Test"></p><div class="note success modern"><p>本地测试部署成功</p></div><p><img src="\blog\done\Congrats.png" alt="Congratulations"></p><h2 id="线上部署"><a href="#线上部署" class="headerlink" title="线上部署"></a>线上部署</h2><p>点击<code>设置git用户名和生成密钥.bat</code>，输入的名字和邮箱后回车。是否覆盖选y，回车一直到底，成功生成ssh密钥。</p><p><img src="\blog\done\SSH.png" alt="SSH"></p><p><img src="\blog\done\SSHKey.png" alt="SSH Key"></p><p>打开<code>生成的ssh密钥.txt</code>，<code>ctrl+c</code>复制密钥。</p><p><img src="\blog\done\SSHKeyC.png" alt="SSH Key Copy"></p><p>回到GitHub仓库，点击<code>Setting</code>选项卡下的<code>Deploy keys</code>，添加一个key并将复制好的密钥粘贴进去。</p><p><img src="\blog\done\Setting.png" alt="Setting"></p><p>SSH key添加好后，打开<code>_config.yml</code>文件，修改<code>url</code>和<code>repo</code>，替换成你自己的https网址和git地址。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as &#x27;http://example.com/child&#x27; and root as &#x27;/child/&#x27;</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://github.com/Loli-Eternally/BlogDemo.github.io.git</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Deployment 部署</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line"></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@github.com:Loli-Eternally/BlogDemo.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br><span class="line">  <span class="attr">message:</span> <span class="string">upload</span></span><br></pre></td></tr></table></figure><p>关闭本地部署的blog网页和cmd，重新启动<code>运行脚本.bat</code>，选择<code>3. 上传网站</code>。</p><div class="note success modern"><p>回到repo主页，看到此时的repo已经都上传好了。</p></div><p><img src="\blog\done\DeployRepo.png" alt="Deploy Repo"></p><p>点击<code>Setting</code>选项卡下的<code>Pages</code>，在<code>Branch</code>一栏选择<code>master</code>并保存。</p><p><img src="\blog\done\Check.png" alt="Check Blog"></p><div class="note success modern"><p>等几分钟后，GitHub完成部署，就可以<code>Visit site</code>了。</p></div><p><img src="\blog\done\DeploySucceed.png" alt="Deploy Succeed"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>test</title>
      <link href="blog/test/"/>
      <url>blog/test/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
